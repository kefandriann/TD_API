openapi: 3.0.3
info:
  title: STD23031 - TD
  version: '1.0.5'
servers:
  - url: https://localhost.std23031.com
paths:
  /customers:
    get:
      tags:
        - User
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCustomer'
        required: true
      responses:
        200:
          description: List of created customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
        required: true
      responses:
        200:
          description: List of updated customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    patch:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  customerId:
                    type: string
                  age:
                    type: integer
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    delete:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CustomerIdentifier'
        required: true
      responses:
        200:
          description: List of deleted customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /meals:
    get:
      tags:
        - Meal
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
    post:
      tags:
        - Meal
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateMeal'
        required: true
      responses:
        200:
          description: List of created meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
    put:
      tags:
        - Meal
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Meal'
        required: true
      responses:
        200:
          description: List of updated meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
    delete:
      tags:
        - Meal
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MealIdentifier'
        required: true
      responses:
        200:
          description: List of deleted meals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
  /customers/{customerId}/orders:
    get:
      tags:
        - Order
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of customer's orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags:
        - Order
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order added successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    put:
      tags:
        - Order
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
components:
  schemas:
    Customer:
      allOf:
        - $ref: '#/components/schemas/CustomerIdentifier'
        - $ref: '#/components/schemas/CreateCustomer'
    CustomerIdentifier:
      type: object
      properties:
        id:
          type: string
    CreateCustomer:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
    Meal:
      allOf:
        - $ref: '#/components/schemas/CustomerIdentifier'
        - $ref: '#/components/schemas/CreateCustomer'
    MealIdentifier:
      type: object
      properties:
        id:
          type: string
    CreateMeal:
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
          format: double
    Order:
      type: object
      properties:
        reference:
          type: string
        meals:
          type: array
          items:
            $ref: '#/components/schemas/Meal'
        orderDateTime:
          type: string
          format: date-time
        customerId:
          type: string
        customer:
          $ref: '#/components/schemas/Customer'